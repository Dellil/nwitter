[{"S:\\project\\practice\\nwitter\\src\\index.js":"1","S:\\project\\practice\\nwitter\\src\\components\\App.js":"2","S:\\project\\practice\\nwitter\\src\\routes\\Home.js":"3","S:\\project\\practice\\nwitter\\src\\routes\\Auth.js":"4","S:\\project\\practice\\nwitter\\src\\components\\Router.js":"5","S:\\project\\practice\\nwitter\\src\\fBase.js":"6","S:\\project\\practice\\nwitter\\src\\components\\Navigation.js":"7","S:\\project\\practice\\nwitter\\src\\routes\\Profile.js":"8","S:\\project\\practice\\nwitter\\src\\components\\Nweet.js":"9"},{"size":239,"mtime":1609350111012,"results":"10","hashOfConfig":"11"},{"size":744,"mtime":1609478606855,"results":"12","hashOfConfig":"11"},{"size":3324,"mtime":1609487610621,"results":"13","hashOfConfig":"11"},{"size":2247,"mtime":1609431754760,"results":"14","hashOfConfig":"11"},{"size":1021,"mtime":1609478632911,"results":"15","hashOfConfig":"11"},{"size":721,"mtime":1609485928506,"results":"16","hashOfConfig":"11"},{"size":274,"mtime":1609432394409,"results":"17","hashOfConfig":"11"},{"size":396,"mtime":1609432774460,"results":"18","hashOfConfig":"11"},{"size":2015,"mtime":1609487899870,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5ju7kj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"S:\\project\\practice\\nwitter\\src\\index.js",["39"],"S:\\project\\practice\\nwitter\\src\\components\\App.js",[],"S:\\project\\practice\\nwitter\\src\\routes\\Home.js",[],"S:\\project\\practice\\nwitter\\src\\routes\\Auth.js",["40"],"import { authService, firebaseInstance } from \"fBase\";\nimport React, { useState } from \"react\";\n\nfunction Auth() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (e) => {\n        const {target: {name, value}} = e;\n        if(name===\"email\") {\n            setEmail(value);\n        }\n        else if(name===\"password\") {\n            setPassword(value);\n        }\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        let data;\n        try {\n            if(newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch(error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    const onSocialClick = async (event) => {\n        const { target: { name },} = event;\n\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name ===\"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"Email\" required input={email} onChange={onChange} name=\"email\"/>\n                <input type=\"password\" placeholder=\"Password\" required input={password} onChange={onChange} name=\"password\"/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\n                {error}\n            </form>\n            <span onClick={toggleAccount}>{newAccount ? \"Log in\" : \"Create Account\"}</span>\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Auth;","S:\\project\\practice\\nwitter\\src\\components\\Router.js",[],"S:\\project\\practice\\nwitter\\src\\fBase.js",[],"S:\\project\\practice\\nwitter\\src\\components\\Navigation.js",[],"S:\\project\\practice\\nwitter\\src\\routes\\Profile.js",[],"S:\\project\\practice\\nwitter\\src\\components\\Nweet.js",["41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"42","severity":1,"message":"46","line":27,"column":17,"nodeType":"44","messageId":"45","endLine":27,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":49,"column":48,"nodeType":"49","endLine":49,"endColumn":111},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]